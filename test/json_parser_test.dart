import 'dart:convert';

import 'package:flutter_test/flutter_test.dart';
import 'package:hacker_news/article.dart';
import 'package:http/http.dart' as http;

main() {
//   test("parses topstories.json", () {
//     String jsonResponse = "[ 21312109, 21310709, 21310972, 21309949, 21310445, 21311869, 21311475, 21311302, 21311892, 21310867, 21310697, 21310030, 21307142, 21309024, 21309907, 21306597, 21308296, 21309518, 21309065, 21307888, 21306229, 21307082, 21309357, 21307136, 21306701, 21309174, 21307966, 21308939, 21310872, 21309033, 21307930, 21310198, 21291835, 21308578, 21311172, 21309644, 21310339, 21310698, 21302474, 21308313, 21284669, 21302498, 21310465, 21290643, 21307308, 21303446, 21307095, 21295575, 21302295, 21299410, 21309491, 21284353, 21294815, 21299546, 21306800, 21312101, 21298751, 21305556, 21293523, 21306415, 21305911, 21305570, 21303173, 21297462, 21306423, 21298383, 21305837, 21309430, 21301467, 21289827, 21307516, 21306609, 21310689, 21293505, 21304889, 21306017, 21306612, 21302306, 21307786, 21298227, 21303181, 21302347, 21303869, 21292291, 21293891, 21305639, 21299086, 21298233, 21309061, 21303003, 21301388, 21302412, 21297639, 21304277, 21289832, 21305698, 21303618, 21302825, 21303316, 21310049, 21303435, 21301784, 21294354, 21300188, 21305166, 21299032, 21302312, 21304670, 21286031, 21295942, 21298341, 21299960, 21295489, 21301851, 21298472, 21300336, 21299768, 21299102, 21301890, 21301247, 21306086, 21303298, 21299610, 21304568, 21293132, 21303770, 21288185, 21300191, 21301523, 21303283, 21298470, 21293941, 21294976, 21301877, 21293859, 21297499, 21298637, 21301633, 21302123, 21293876, 21309783, 21295079, 21298920, 21292497, 21293827, 21309728, 21297868, 21293452, 21309697, 21300962, 21294155, 21298399, 21309654, 21300476, 21302629, 21308826, 21300052, 21296167, 21295149, 21301254, 21310880, 21284770, 21307627, 21293734, 21298878, 21306021, 21297893, 21306806, 21286379, 21283835, 21301604, 21307854, 21302244, 21303142, 21297165, 21299127, 21298830, 21292205, 21305258, 21306664, 21290388, 21304648, 21288029, 21301628, 21306024, 21290881, 21298006, 21303895, 21304815, 21287944, 21286898, 21288663, 21288195, 21305114, 21286640, 21297664, 21309457, 21304062, 21297876, 21292191, 21298304, 21301719, 21294621, 21285329, 21296261, 21298306, 21283907, 21291510, 21295729, 21300529, 21304488, 21290785, 21287736, 21290813, 21283791, 21286192, 21289237, 21300822, 21295097, 21283838, 21297880, 21290306, 21288988, 21282647, 21307618, 21306582, 21293189, 21286319, 21302747, 21283994, 21289531, 21305376, 21301665, 21309527, 21299983, 21289456, 21302591, 21300689, 21293497, 21285419, 21290200, 21302518, 21295516, 21283861, 21291579, 21292860, 21287924, 21304885, 21291131, 21306280, 21293397, 21293852, 21300902, 21300898, 21300860, 21302276, 21307853, 21291518, 21282680, 21309243, 21289251, 21307944, 21292476, 21300748, 21298394, 21288415, 21287275, 21301374, 21286104, 21293544, 21296323, 21289104, 21300669, 21306212, 21295117, 21298620, 21287498, 21292445, 21304612, 21299318, 21282699, 21292472, 21298729, 21288280, 21305650, 21304337, 21301309, 21301269, 21285145, 21298360, 21306818, 21295853, 21302114, 21302920, 21301119, 21288060, 21291342, 21297837, 21299321, 21297733, 21287267, 21304545, 21304462, 21299468, 21299853, 21299844, 21293838, 21302237, 21302798, 21299614, 21299559, 21299283, 21286806, 21297178, 21300005, 21303978, 21305700, 21303141, 21297789, 21286973, 21305451, 21285127, 21301440, 21285728, 21301958, 21289074, 21285146, 21290589, 21304617, 21284387, 21289201, 21309175, 21298075, 21303318, 21295849, 21286574, 21289920, 21301930, 21283644, 21298692, 21288807, 21297506, 21286074, 21284962, 21289943, 21286229, 21289337, 21299008, 21283651, 21282179, 21306686, 21302582, 21283216, 21284255, 21291935, 21301805, 21296565, 21300817, 21306802, 21296259, 21284466, 21302304, 21285376, 21287354, 21289899, 21303057, 21286054, 21301323, 21294499, 21296855, 21283528, 21299171, 21290582, 21294187, 21292461, 21301712, 21301711, 21301677, 21293025, 21292999, 21305449, 21282609, 21299911, 21299722, 21300422, 21296612, 21299277, 21286537, 21302319, 21285609, 21295368, 21289786, 21292536, 21292533, 21283635, 21298369, 21286200, 21289605, 21287955, 21288660, 21301641, 21294327, 21288239, 21310603, 21288421, 21296417, 21282982, 21284032, 21301163, 21292281, 21287412, 21297279, 21298489, 21297221, 21291842, 21293272, 21285907, 21282110, 21285638, 21289563, 21291210, 21300639, 21290657, 21284241, 21300381, 21297839, 21299762, 21283074, 21290839, 21294569, 21282372, 21284896, 21297554, 21299593, 21286177, 21293281, 21295932, 21292986, 21295756, 21297134, 21295305, 21295234, 21289443, 21286982, 21296954, 21294419, 21298385, 21294286, 21284312, 21298163, 21296799, 21286597, 21293350, 21296271, 21288268, 21292793, 21296197, 21285032, 21295874, 21301382, 21295556, 21297564, 21283221, 21300013, 21296499, 21294783, 21297053, 21287642, 21287599, 21289637, 21287526, 21296951, 21293606, 21292881, 21290508, 21290096, 21292650, 21292605, 21285807, 21285793, 21291593, 21291241, 21296294, 21288158, 21297199, 21290651, 21290602, 21282843, 21295708, 21294932, 21294882, 21294802, 21294519, 21284987, 21284567, 21294613, 21283988, 21289941, 21282556, 21292554 ]";
//     expect(parseTopStories(jsonResponse).first, 21312109);
//   });

//   test("parses article.json", () {
//     String jsonResponse = '{"by" : "dhouston", "descendants" : 71, "id" : 8863, "kids" : [ 9224, 8917, 8952, 8884, 8887, 8869, 8958, 8940, 8908, 9005, 8873, 9671, 9067, 9055, 8865, 8881, 8872, 8955, 10403, 8903, 8928, 9125, 8998, 8901, 8902, 8907, 8894, 8870, 8878, 8980, 8934, 8943, 8876 ], "score" : 104, "time" : 1175714200, "title" : "My YC app: Dropbox - Throw away your USB drive", "type" : "story", "url" : "http://www.getdropbox.com/u/2/screencast.html"}';
//     expect(parseArticle(jsonResponse).by, "dhouston");
//   });

  test('parses item.json over the network', () async {
      final url = 'https://hacker-news.firebaseio.com/v0/topstories.json';
      final res = await http.get(url);
      if (res.statusCode == 200) {
        final idList = json.decode(res.body);
        if (idList.isNotEmpty) {
          final storyUrl = 'https://hacker-news.firebaseio.com/v0/item/${idList.first}.json';
          final storyRes = await http.get(storyUrl);
          if (storyRes.statusCode == 200) {
            expect(Article.fromJson(storyRes.body), isNotNull);
          }
        }
      }
  });
}